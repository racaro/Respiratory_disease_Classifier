# -*- coding: utf-8 -*-
"""Preprocesamiento.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QPMJBQ2bRiEx116Tl34Va0A2NedGiuf-

### Preprocesamiento Datos

#### 1.0 Importaci√≥n Modulos

Dos clasificadores
   - Enfermo/No enfermo
   - Datos
   - Crear modelo
   - Comentar modelo
   - Trabajar mas resultados 
   - Que tipo de enfermedad (set de datos "antes") 
      - Mejora de modelo 
      - Comentar modelo
      - Trabajar mas resultados
"""

ls "Respiratory_Sound_Database/Respiratory_Sound_Database/Respiratory_Sound_Database/audio_and_txt_files"

import os

path = "../Respiratory_Sound_Database/Respiratory_Sound_Database/audio_and_txt_files"

directorio = os.listdir(path)

# Quitar archivos txt
for file in directorio:
    if "txt" in file:
        path_to_file = os.path.join(path,file)
        os.remove(path_to_file)

import pandas as pd

df = pd.read_csv("../Respiratory_Sound_Database/Respiratory_Sound_Database/patient_diagnosis.csv",sep=",",header=None)

df = df.rename(columns={0:"digito",1:"enfermedad"})

df
# Cargamos csv con las etiquetas Y

df = df.set_index("digito")

df.loc[101][0]

df

df.tail(20)

path= path + "/"

path

len(directorio)



enfermedades = []
x = 0 
i = 0 
for file in directorio:
    try:
        split_n = file.split("_")
        clase = split_n[0]
        enfermedad = df.loc[int(clase)][0]
        #print(enfermedad)
        src = os.path.join(path,file)
        print(src)
        dst = os.path.join(path,(enfermedad+"_"+ split_n[0] + "_"+ split_n[1]+"_" +split_n[2]+"_"+split_n[3] +"_" +split_n[4]))
        print(dst)
        os.rename(src,dst)
        enfermedades.append(enfermedad)
        
    except ValueError:
        #print(e)
        i = i +1
        continue
    except FileExistsError as e:
        #print(e)
        continue

print(x)
print(i)

enfermedades = pd.Series(enfermedades)

# unique 
enfermedades.unique()

enfermedades

enfermedades

"""### 3. Convertir a espectograma"""

directorio =os.listdir(path)

archivo_1 = path+"/"+directorio[0]

!pip install librosa

import librosa
from librosa.display import specshow
import matplotlib.pyplot as plt

for file in directorio:
    print(file)



# Aqui cargamos archivos .wav y creamos espectrograma para cada archivo
for file in directorio:
    figure = plt.gcf()
    figure.set_size_inches(4, 3)
    archivo = path+"/"+file
    print(archivo)
    scale, sr = librosa.load(archivo)
    librosa.display.waveshow(scale, sr=sr)
    mel_spectrogram = librosa.feature.melspectrogram(scale, sr, n_fft=2048, hop_length=512, n_mels=10, fmax=8000)
    log_mel_spectrogram = librosa.power_to_db(mel_spectrogram)
    librosa.display.specshow(log_mel_spectrogram,sr=sr)
    salida ="../"+ archivo.split(".")[2] + ".jpg"
    plt.savefig(salida)



"""### 4. Mover a Carpetas"""

loc_carpeta_enfermades = "../Respiratory_Sound_Database/Respiratory_Sound_Database/Enfermedades/"

carpeta_enfermedades = os.listdir("../Respiratory_Sound_Database/Respiratory_Sound_Database/Enfermedades/")

carpeta_enfermedades

directorio = os.listdir(path)

#1. Encontrar indices -/
#2. Renombrar indices -/
#3. Crear espectograma -/
#4. Mover a carpetas  -/

#Moverlo a Carpetas

carpeta_enfermedades

archivo

for file in directorio:
    print(file)

path

# Aqui renombramos imagenes
for file in directorio:
    for x in carpeta_enfermedades:
        archivo = file.split("_")[0]
        if "-jpg" in archivo:
            if archivo == x:
                src = os.path.join(path,file)
                dst = os.path.join(loc_carpeta_enfermades+x,file)
                os.rename(src,dst)
        else:
            continue

